name: Terraform Apply

on:
  workflow_call:
    inputs:
      tf_workspace:
        required: true
        type: string
      aws_region:
        required: false
        type: string
        default: "ap-southeast-2"
      gh_repo:
        type: string
        required: true
      databricks_account_id:
        type: string
        required: false
      target_role_arn:
        type: string
        required: true
      tag:
        required: true
        type: string
      tf_dir:
        required: true
        type: string
      tf_file:
        required: true
        type: string
      cloud:
        required: true
        type: string
      workspace_s3_bucket_name:
        required: false
        type: string
      databricks_relay_endpoint_id:
        required: false
        type: string
      databricks_workspace_endpoint_id:
        required: false
        type: string
      databricks_workspace_url:
        required: false
        type: string
      azure_client_id:
        required: false
        type: string
      azure_sub_id:
        required: false
        type : string
      azure_tenant_id:
        required: false
        type: string
      storage_account_id:
        required: false
        type: string
      vnet_id:
        required: false
        type: string
      subnet_id:
        required: false
        type: string

    secrets:
      RIOTINTO_ORG_TOKEN:
        required: true
      databricks_client_id:
        required: false
      databricks_client_secret:
        required: false

    outputs:
      aws_databricks_workspace_url:
        description: "AWS Databricks URL"
        value: ${{ jobs.aws-terraform-apply.outputs.databricks_workspace_url }}
      azure_databricks_workspace_url:
        description: "Azure Databricks URL"
        value: ${{ jobs.azure-terraform-apply.outputs.databricks_workspace_url }}
      databricks_workspace_url:
          description: "Databricks workspace URL (AWS or Azure)"
          value: ${{ inputs.cloud == 'aws' && jobs.aws-terraform-apply.outputs.databricks_workspace_url || jobs.azure-terraform-apply.outputs.databricks_workspace_url }}

permissions:
  contents: read
  id-token: write

jobs:
  aws-terraform-apply:
    if: ${{ inputs.cloud == 'aws' }}
    runs-on: ubuntu-latest
    outputs:
      databricks_workspace_url: ${{ steps.tfApply.outputs.databricks_workspace_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.TAG }}
          repository: rio-tinto/${{ inputs.GH_REPO }}

      - name: Configure GitHub credentials
        run: |
          git config --global url."https://${{ secrets.RIOTINTO_ORG_TOKEN }}@github.com/".insteadOf "https://github.com/"
          git config --global url."git@github.com:".insteadOf "https://github.com/"
          git config --list
        working-directory: "${{ inputs.tf_dir }}"

      # Login to AWS
      - name: OIDC Login to AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ inputs.target_role_arn }}
          role-session-name: DNA-Automation-Github-Actions-Role
          aws-region: ${{ inputs.aws_region }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3.1.1

      - name: Initialize Terraform working directory
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd ${{ inputs.tf_dir }}
          terraform init

      - name: Create Workspace
        run: |
          cd ${{ inputs.tf_dir }}
          terraform workspace new ${{ inputs.tf_workspace }}
        continue-on-error: true

      - name: Select Workspace
        run: |
          cd ${{ inputs.tf_dir }}
          terraform workspace select ${{ inputs.tf_workspace }}

      - name: Terraform Apply
        if: ${{ inputs.databricks_account_id != '782ba817-b9bf-4033-9aa9-56bb80139fba' }}
        run: |
          cd ${{ inputs.tf_dir }}
          terraform apply -var-file=${{ inputs.tf_file }} -auto-approve

      - name: Terraform Apply Databricks Workspace
        id: tfApply
        if: ${{ inputs.databricks_account_id == '782ba817-b9bf-4033-9aa9-56bb80139fba' && inputs.tf_dir == 'workspace' }}
        env:
          DATABRICKS_HOST: "https://accounts.cloud.databricks.com"
          DATABRICKS_ACCOUNT_ID: ${{ inputs.databricks_account_id }}
          DATABRICKS_CLIENT_ID: ${{ secrets.databricks_client_id }}
          DATABRICKS_CLIENT_SECRET: ${{ secrets.databricks_client_secret }}
        run: |
          cd ${{ inputs.tf_dir }}
          terraform apply -var-file='${{ inputs.tf_file }}' -auto-approve \
          -var 'databricks_client_id=${{ secrets.databricks_client_id }}' \
          -var 'databricks_client_secret=${{ secrets.databricks_client_secret }}' \
          -var 'databricks_workspace_endpoint_id=${{ inputs.databricks_workspace_endpoint_id }}' \
          -var 'databricks_relay_endpoint_id=${{ inputs.databricks_relay_endpoint_id }}' 

          echo "databricks_workspace_url=$(terraform output -raw databricks_workspace_url)" >> $GITHUB_OUTPUT

      - name: Terraform Apply Databricks
        if: ${{ inputs.databricks_account_id == '782ba817-b9bf-4033-9aa9-56bb80139fba' && inputs.tf_dir != 'workspace' }}
        env:
          DATABRICKS_HOST: "https://accounts.cloud.databricks.com"
          DATABRICKS_ACCOUNT_ID: ${{ inputs.databricks_account_id }}
          DATABRICKS_CLIENT_ID: ${{ secrets.databricks_client_id }}
          DATABRICKS_CLIENT_SECRET: ${{ secrets.databricks_client_secret }}
        run: |
          cd ${{ inputs.tf_dir }}
          terraform apply -var-file='${{ inputs.tf_file }}' -auto-approve \
          -var 'databricks_client_id=${{ secrets.databricks_client_id }}' \
          -var 'databricks_client_secret=${{ secrets.databricks_client_secret }}' \
          -var 'databricks_workspace_url=${{ inputs.databricks_workspace_url }}'

  azure-terraform-apply:
    runs-on: ubuntu-latest
    if: ${{inputs.cloud=='az'}}
    outputs:
      databricks_workspace_url: ${{ steps.tfApply.outputs.databricks_workspace_url }}
      
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: 
          repository: rio-tinto/${{inputs.gh_repo}}
          ref: ${{inputs.TAG}}

      - name: Configure GitHub credentials
        run: |
          git config --global url."https://${{ secrets.RIOTINTO_ORG_TOKEN }}@github.com/".insteadOf "https://github.com/"
          git config --global url."git@github.com:".insteadOf "https://github.com/"
          git config --list
        working-directory: "${{ inputs.tf_dir }}"  
          
      - name: az login
        uses: azure/login@v2
        with:
          client-id: ${{ inputs.azure_client_id }}
          tenant-id: ${{ inputs.azure_tenant_id }}
          subscription-id: ${{ inputs.azure_sub_id }}
      
      - name: az account show
        run: az account show
  
      - name: Configure AWS credentials
        run: aws configure set aws-region ${{ inputs.aws_region }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3.1.1

      - name: Initialize Terraform working directory
        env: 
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          cd ${{ inputs.tf_dir }}
          terraform init 

      - name: Create Workspace
        run: |
          cd ${{ inputs.tf_dir }}
          terraform workspace new ${{inputs.tf_workspace}}   
        continue-on-error: true

      - name: Select Workspace
        run: |
          cd ${{ inputs.tf_dir }}
          terraform workspace select ${{ inputs.tf_workspace }}

      - name: Terraform Apply
        if: ${{ inputs.databricks_account_id != '782ba817-b9bf-4033-9aa9-56bb80139fba' && inputs.tf_dir == 'workspace' }}
        id: tfApply
        run: |
          cd ${{ inputs.tf_dir }}
          terraform apply -var-file=${{ inputs.tf_file }} -auto-approve
          
          # Capture workspace URL if available
          if terraform output -json | grep -q "databricks_workspace_url"; then
            echo "databricks_workspace_url=$(terraform output -raw databricks_workspace_url)" >> $GITHUB_OUTPUT
          fi
      
      - name: Terraform Apply (Non-Workspace)
        if: ${{ inputs.databricks_account_id != '782ba817-b9bf-4033-9aa9-56bb80139fba' && inputs.tf_dir != 'workspace' }}
        run: |
          cd ${{ inputs.tf_dir }}
          terraform apply -var-file=${{ inputs.tf_file }} -auto-approve
      
      - name: Terraform Apply Databricks Workspace
        id: tfApplyDatabricks
        if: ${{ inputs.databricks_account_id == 'fe1630db-b2af-4ac1-a394-9f0e33096a57' && inputs.tf_dir == 'workspace' }}
        env:
          DATABRICKS_HOST: "https://accounts.azuredatabricks.net"
          DATABRICKS_ACCOUNT_ID: ${{ inputs.databricks_account_id }}
          DATABRICKS_CLIENT_ID: ${{ secrets.databricks_client_id }}
          DATABRICKS_CLIENT_SECRET: ${{ secrets.databricks_client_secret }}
        run: |
          cd ${{ inputs.tf_dir }}
          terraform apply -var-file='${{ inputs.tf_file }}' -auto-approve \
          -var 'databricks_client_id=${{ secrets.databricks_client_id }}' \
          -var 'databricks_client_secret=${{ secrets.databricks_client_secret }}' \
          -var 'databricks_workspace_endpoint_id=${{ inputs.databricks_workspace_endpoint_id }}' \
          -var 'databricks_relay_endpoint_id=${{ inputs.databricks_relay_endpoint_id }}' 
          
          echo "databricks_workspace_url=$(terraform output -raw databricks_workspace_url)" >> $GITHUB_OUTPUT

      - name: Terraform Apply Databricks
        if: ${{ inputs.databricks_account_id == 'fe1630db-b2af-4ac1-a394-9f0e33096a57' && inputs.tf_dir != 'workspace' }}
        env:
          DATABRICKS_HOST: "https://accounts.azuredatabricks.net"
          DATABRICKS_ACCOUNT_ID: ${{ inputs.databricks_account_id }}
          DATABRICKS_CLIENT_ID: ${{ secrets.databricks_client_id }}
          DATABRICKS_CLIENT_SECRET: ${{ secrets.databricks_client_secret }}
        run: |
          cd ${{ inputs.tf_dir }}
          terraform apply -var-file='${{ inputs.tf_file }}' -auto-approve \
          -var 'databricks_client_id=${{ secrets.databricks_client_id }}' \
          -var 'databricks_client_secret=${{ secrets.databricks_client_secret }}' \
          -var 'databricks_workspace_url=${{ inputs.databricks_workspace_url }}'
